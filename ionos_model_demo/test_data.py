#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è IONOS Demo
"""

import os
import pandas as pd

def test_data_loading():
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç
    current_dir = os.path.dirname(os.path.abspath(__file__))
    print(f"–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {current_dir}")
    print(f"–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    
    # –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É –¥–∞–Ω–Ω—ã—Ö
    possible_paths = [
        os.path.join(current_dir, "cnc_daten.csv"),
        os.path.join(current_dir, "..", "data_and_eda", "cnc_daten.csv"),
        "/Users/svitlanakovalivska/Industrial_Signal_Processing_TimeSeriesAnalysis/data_and_eda/cnc_daten.csv"
    ]
    
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç–∏:")
    for i, path in enumerate(possible_paths, 1):
        exists = os.path.exists(path)
        size = os.path.getsize(path) if exists else 0
        print(f"{i}. {path}")
        print(f"   {'‚úÖ –°—É—â–µ—Å—Ç–≤—É–µ—Ç' if exists else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}")
        if exists:
            print(f"   üìä –†–∞–∑–º–µ—Ä: {size:,} –±–∞–π—Ç")
        print()
    
    # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
    data_path = None
    for path in possible_paths:
        if os.path.exists(path):
            data_path = path
            break
    
    if data_path:
        print(f"üéØ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Ç—å: {data_path}")
        try:
            # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å —Ä–∞–∑–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏
            try:
                df = pd.read_csv(data_path, delimiter=';')
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Å ';': {len(df)} —Å—Ç—Ä–æ–∫, {len(df.columns)} —Å—Ç–æ–ª–±—Ü–æ–≤")
            except:
                df = pd.read_csv(data_path, delimiter=',')
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Å ',': {len(df)} —Å—Ç—Ä–æ–∫, {len(df.columns)} —Å—Ç–æ–ª–±—Ü–æ–≤")
            
            print(f"üìä –°—Ç–æ–ª–±—Ü—ã: {list(df.columns[:5])}...")
            if 'name' in df.columns:
                print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'name' –Ω–∞–π–¥–µ–Ω")
            else:
                print("‚ùå –°—Ç–æ–ª–±–µ—Ü 'name' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
    else:
        print("‚ùå –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –ø—É—Ç–µ–π!")

if __name__ == "__main__":
    test_data_loading()
